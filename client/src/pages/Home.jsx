import React, { useState, useEffect, useCallback } from "react";

import { Card, Loader, FormField } from "../components";

const RenderCards = ({ data, title }) => {
    if (data?.length > 0) {
        return data.map((post) => (
            <Card
                key={post._id}
                {...post}
            />
        ));
    }
    return <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>;
};

const Home = () => {
    const [loading, setLoading] = useState(false);
    const [allPosts, setAllPosts] = useState(null);
    const [searchText, setSearchText] = useState("");

    const [searchedResults, setSearchedResults] = useState(null);
    const [searchTimeout, setSearchTimeout] = useState(null);

    const fetchPosts = useCallback(async (controller) => {
        setLoading(true);

        try {
            const response = await fetch("https://dall-e-srt3.onrender.com/api/v1/post", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
                signal: controller.signal,
            });

            if (response.ok) {
                const result = await response.json();

                setAllPosts(result.data.reverse());
            }
        } catch (error) {
            if (error.name === "AbortError") {
                console.log("request aborted");
            } else {
                console.log(error);
            }
        } finally {
            if (!controller.signal.aborted) {
                setLoading(false);
            }
        }
    }, []);

    useEffect(() => {
        const controller = new AbortController();

        fetchPosts(controller);

        return () => controller.abort();
    }, [fetchPosts]);

    const handleSearchChange = (e) => {
        clearTimeout(searchTimeout);
        setSearchText(e.target.value);

        setSearchTimeout(
            setTimeout(() => {
                const searchResults = allPosts.filter(
                    (item) =>
                        item.name.toLowerCase().includes(searchText.toLowerCase()) ||
                        item.prompt.toLowerCase().includes(searchText.toLowerCase())
                );

                setSearchedResults(searchResults);
            }, 500)
        );
    };

    return (
        <section className="max-w-7xl mx-auto">
            <div>
                <h1 className="font-extrabold text-[#222328] text-[32px]">The community Showcase</h1>
                <p className="mt-2 text-[#666e75] text-[16px] max-w-[800px]">
                    Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
                </p>
            </div>

            <div className="mt-16">
                <FormField
                    label="search posts"
                    type="text"
                    name="text"
                    placeholder="Search posts"
                    value={searchText}
                    handleChange={handleSearchChange}
                />
            </div>

            <div className="mt-10">
                {loading ? (
                    <div className="flex justify-center items-center">
                        <Loader />
                    </div>
                ) : (
                    <>
                        {searchText && (
                            <h2 className="font-medium text-[#666e75] text-xl mb-3">
                                Showing results for <span className="text-[#222328]">{searchText}</span>
                            </h2>
                        )}
                        <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                            {searchText ? (
                                <RenderCards
                                    data={searchedResults}
                                    title="No search results found"
                                />
                            ) : (
                                <RenderCards
                                    data={allPosts}
                                    title="No post found"
                                />
                            )}
                        </div>
                    </>
                )}
            </div>
        </section>
    );
};

export default Home;
